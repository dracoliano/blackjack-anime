{"version":3,"sources":["Components/Images/verso.png","Components/Images/wallpaper.png","Music/push.wav","Music/music.mp3","Components/Images/heart/queenHeart.png","Components/Images/heart/kingHeart.png","Components/Images/heart/jokerHeart.png","Components/Images/diamond/queenDiamond.png","Components/Images/diamond/kingDiamond.png","Components/Images/diamond/jokerDiamond.png","Components/Images/spade/queenSpade.png","Components/Images/spade/kingSpade.png","Components/Images/spade/jokerSpade.png","Components/Images/club/queenClub.png","Components/Images/club/kingClub.png","Components/Images/club/jokerClub.png","Components/Menu/Menu.jsx","Components/Card/Card.jsx","Components/Main.jsx","index.js","App.js"],"names":["module","exports","Card","props","className","title","src","alt","onClick","btnName","styleCard","item","color","naipe","backgroundColor","card","backgroundImage","queenHeart","kingHeart","jokerHeart","queenDiamond","kingDiamond","jokerDiamond","queenSpade","kingSpade","jokerSpade","queenClub","kingClub","jokerClub","backgroundSize","Test","hand","map","key","id","style","symbol","require","cards","naipes","Main","useState","game","setGame","deck","setDeck","score","playerOne","setPlayerOne","playerTwo","setPlayerTwo","limit","burst","setBurst","message","setMessage","useEffect","gameStart","genDeck","i","push","concat","generateDeck","music","document","querySelector","play","volume","getCard","splice","Math","floor","random","length","time","setTimeout","cardP1","cardP2","Number","value","verso","filter","Menu","walp","placeholder","autoplay","loop","pause","currentTime","restart","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4dc2c5be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/verso.32ffd0cb.png\";","module.exports = __webpack_public_path__ + \"static/media/wallpaper.40bdd0ee.png\";","module.exports = __webpack_public_path__ + \"static/media/push.3c6987ff.wav\";","module.exports = __webpack_public_path__ + \"static/media/music.30c695e1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/queenHeart.e2b8f02c.png\";","module.exports = __webpack_public_path__ + \"static/media/kingHeart.8aabe81e.png\";","module.exports = __webpack_public_path__ + \"static/media/jokerHeart.c69bef89.png\";","module.exports = __webpack_public_path__ + \"static/media/queenDiamond.303ead8a.png\";","module.exports = __webpack_public_path__ + \"static/media/kingDiamond.bf4046ea.png\";","module.exports = __webpack_public_path__ + \"static/media/jokerDiamond.e61f18ed.png\";","module.exports = __webpack_public_path__ + \"static/media/queenSpade.b51ee9d6.png\";","module.exports = __webpack_public_path__ + \"static/media/kingSpade.09ab2daf.png\";","module.exports = __webpack_public_path__ + \"static/media/jokerSpade.a80f88f5.png\";","module.exports = __webpack_public_path__ + \"static/media/queenClub.8a8d265a.png\";","module.exports = __webpack_public_path__ + \"static/media/kingClub.36a48afa.png\";","module.exports = __webpack_public_path__ + \"static/media/jokerClub.21bf9479.png\";","import React from 'react';\r\nimport './menu.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <>\r\n      <div className=\"card-body\">\r\n        <div className=\"card-title\">{props.title}</div>\r\n        <img className=\"card-img\" src={props.src} alt=\"walp\"/>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <button onClick={props.onClick}className=\"btn-card\">{props.btnName}</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card;","import queenHeart from '../Images/heart/queenHeart.png';\r\nimport kingHeart from '../Images/heart/kingHeart.png';\r\nimport jokerHeart from '../Images/heart/jokerHeart.png';\r\n\r\nimport queenDiamond from '../Images/diamond/queenDiamond.png';\r\nimport kingDiamond from '../Images/diamond/kingDiamond.png';\r\nimport jokerDiamond from '../Images/diamond/jokerDiamond.png';\r\n\r\nimport queenSpade from '../Images/spade/queenSpade.png';\r\nimport kingSpade from '../Images/spade/kingSpade.png';\r\nimport jokerSpade from '../Images/spade/jokerSpade.png';\r\n\r\nimport queenClub from '../Images/club/queenClub.png';\r\nimport kingClub from '../Images/club/kingClub.png';\r\nimport jokerClub from '../Images/club/jokerClub.png';\r\n\r\nimport './card.css'\r\n\r\nimport React from 'react';\r\n\r\nconst styleCard = item => {\r\n  return {\r\n    color: (() => {\r\n      switch (item.naipe) {\r\n        case \"Heart\":   return \"#bf1b54\";\r\n        case \"Diamond\": return \"#3279e3\";\r\n        case \"Spade\":  return \"#c73a3a\";\r\n        case \"Club\": return \"#bf870d\"\r\n        default:      return \"#FFFFFF\";\r\n      }\r\n    })(),\r\n    backgroundColor: (() => {\r\n      if(item.card === 'J') return '#c0b6cc';\r\n      if(item.card === 'Q') return '#c0adff';\r\n      if(item.card === 'K') return '#e6ff40';\r\n\r\n    })(),\r\n    backgroundImage: (() => {\r\n      if (item.card === 'Q' && item.naipe === 'Heart' ) return `url(${queenHeart})`;\r\n      if (item.card === 'K' && item.naipe === 'Heart') return `url(${kingHeart})`;\r\n      if (item.card === 'J' && item.naipe === 'Heart') return `url(${jokerHeart})`;\r\n\r\n      if (item.card === 'Q' && item.naipe === 'Diamond') return `url(${queenDiamond})`\r\n      if (item.card === 'K' && item.naipe === 'Diamond') return `url(${kingDiamond})`\r\n      if (item.card === 'J' && item.naipe === 'Diamond') return `url(${jokerDiamond})`\r\n\r\n      if (item.card === 'Q' && item.naipe === 'Spade') return `url(${queenSpade})`;\r\n      if (item.card === 'K' && item.naipe === 'Spade') return `url(${kingSpade})`;\r\n      if (item.card === 'J' && item.naipe === 'Spade') return `url(${jokerSpade})`;\r\n\r\n      if (item.card === 'Q' && item.naipe === 'Club') return `url(${queenClub})`;\r\n      if (item.card === 'K' && item.naipe === 'Club') return `url(${kingClub})`;\r\n      if (item.card === 'J' && item.naipe === 'Club') return `url(${jokerClub})`;\r\n    })(),\r\n    backgroundSize: 'cover',\r\n    }\r\n  }\r\n\r\nconst Test = props => {\r\n  return (\r\n    <ul>\r\n      {props.hand.map(item => (\r\n      <li key={item.id}>\r\n        <div className=\"card\" style={styleCard(item)}>\r\n          <div className=\"card-top\">\r\n            <p className=\"card-value\">{item.card}</p>\r\n            <p className=\"symbol\">{item.symbol}</p>\r\n          </div>\r\n          <div className=\"card-bottom\">\r\n            <p className=\"symbol\">{item.symbol}</p>\r\n            <p>{item.card}</p>\r\n          </div>\r\n        </div>        \r\n      </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Test","import verso from './Images/verso.png';\r\nimport walp from './Images/wallpaper.png';\r\n\r\nimport push from '../Music/push.wav';\r\nimport music from '../Music/music.mp3';\r\n\r\nimport './main.css';\r\n\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nimport Menu from './Menu/Menu';\r\nimport Card from './Card/Card';\r\n\r\nconst {cards, naipes} = require ('../data');\r\n\r\nconst Main = () => {\r\n  const [game, setGame]           = useState(false);\r\n  const [deck, setDeck]           = useState([]);\r\n  const [playerOne, setPlayerOne] = useState({hand: [], score: 0});\r\n  const [playerTwo, setPlayerTwo] = useState({hand: [], score: 0});\r\n  const [limit]                   = useState(21);\r\n  const [burst, setBurst]         = useState(false);\r\n  const [message, setMessage]     = useState('');\r\n\r\n  useEffect(() => {\r\n    if (playerOne.score > limit) {\r\n      setMessage(message => `You Lose. Score: ${playerOne.score}`)\r\n      setBurst(burst => true);\r\n    }\r\n    if (playerTwo.score > limit) {\r\n      setMessage(message => `You Win. Oponent Score: ${playerTwo.score}`)\r\n      setBurst(burst => true);\r\n    };    \r\n    if (playerTwo.score >= limit-3 && playerTwo.score <= limit) {\r\n      if(playerOne.score === playerTwo.score) {\r\n        setMessage(message => `DRAW`)\r\n      }\r\n      if(playerOne.score > playerTwo.score) {\r\n        setMessage(message => `OPONENT BURST, You Win. Score: ${playerOne.score}`)\r\n      }\r\n      if (playerTwo.score > playerOne.score) {\r\n        setMessage(message => `OPONENT BURST, You Lose. Oponent Score: ${playerTwo.score}`)\r\n      };    \r\n      setBurst(burst => true);\r\n\r\n    }\r\n  }, [playerOne.score, limit, playerTwo.score, playerOne, playerTwo]);\r\n\r\n\r\n  const generateDeck = (card, naipe) => {\r\n    let genDeck = [];\r\n    for(let i of card) {\r\n      for (let j of naipe) {\r\n        let card = {...i,...j};\r\n        genDeck.push(card);\r\n      }\r\n    }  \r\n    for (let i in genDeck) {\r\n      let card = {...genDeck[i], id: i}\r\n      setDeck(deck => deck.concat(card));\r\n    }\r\n  }\r\n\r\n  const gameStart = (card, naipe) => {\r\n    setGame(game => true)\r\n    generateDeck(card, naipe);\r\n    let music = document.querySelector('#music')\r\n    music.play();\r\n    music.volume = 0.3;\r\n\r\n  }\r\n  \r\n  const restart = () => {\r\n    setGame(false);\r\n    setDeck([])\r\n    setBurst(false);\r\n    setMessage('');\r\n    setPlayerOne({hand: [], score: 0});\r\n    setPlayerTwo({hand: [], score: 0});\r\n    let music = document.querySelector('#music')\r\n    music.pause()\r\n    music.currentTime = 0;\r\n  }\r\n\r\n  const getCard = deck => deck.splice(Math.floor(Math.random()*deck.length), 1);\r\n\r\n  const play = (deck, time) => {\r\n    if(!burst) {\r\n      setTimeout(() => {\r\n        let cardP1 = getCard(deck)\r\n        let cardP2 = getCard(deck)\r\n        setPlayerOne({hand: playerOne.hand.concat(cardP1), score: playerOne.score+Number(cardP1.map(item => item.value))});\r\n        setPlayerTwo({hand: playerTwo.hand.concat(cardP2), score: playerTwo.score+Number(cardP2.map(item => item.value))});\r\n      }, time);\r\n      document.querySelector('#push').play();\r\n    }\r\n  }\r\n  const burstf = () =>  {\r\n    if (playerOne.score > playerTwo.score) {\r\n      setBurst(burst => true);\r\n      setMessage(message => 'YOU WIN');\r\n    };\r\n    if (playerOne.score < playerTwo.score) {\r\n      setBurst(burst => true);\r\n      setMessage(message => 'YOU LOSE');\r\n    };\r\n    if (playerOne.score === playerTwo.score) {\r\n      setBurst(burst => true);\r\n      setMessage(message => 'DRAW');\r\n    }\r\n  }\r\n\r\n    return(\r\n      <>\r\n      {(() => {\r\n          if (!game) {\r\n            return <Menu onClick={() => gameStart(cards, naipes)} title=\"Welcome\" src={walp} btnName=\"START\" placeholder=\"Limit\"/>\r\n          }\r\n          return (\r\n            <>\r\n              <audio id=\"push\" src={push}></audio>\r\n              <img onClick={() => play(deck,120)} src={verso} id=\"push\"alt=\"play\" style={{\r\n              filter: (() => {\r\n                  if (!deck.length || burst) return 'grayscale(100%)';;\r\n              })()\r\n            }}></img>\r\n            </>\r\n            \r\n          )\r\n        })()}\r\n        {(() => {\r\n          if (game) {\r\n            return (\r\n              <>\r\n                <span id=\"message\">{message}</span>\r\n                <Card hand={playerOne.hand}/>\r\n              </>\r\n            )\r\n          }\r\n        })()}\r\n        <div id=\"game\">\r\n          <audio id=\"music\" src={music} autoplay loop></audio>\r\n        {(() => {\r\n          if(playerOne.hand.length > 1 && !burst) {\r\n            return <button id=\"burst\" onClick={() => burstf()}>BURST</button>\r\n          };\r\n        })()}\r\n        {(() => {\r\n          if (game) {\r\n            if (burst) {\r\n              return (\r\n              <>\r\n                <Card id=\"player2\"hand={playerTwo.hand}/>\r\n                <button id=\"restart\" onClick={() => restart() }>Restart</button>\r\n              </>\r\n              )\r\n            }\r\n            return <ul>{playerTwo.hand.map(item => (<li key={item.id}><img src={verso} alt=\"ia\"/></li>))}</ul>\r\n          }\r\n        })()}\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","import React, {Component} from 'react';\nimport Main from './Components/Main';\nexport default function App () {\n  return(\n    <div>\n      <Main/>\n    </div>\n\n  )\n}"],"sourceRoot":""}